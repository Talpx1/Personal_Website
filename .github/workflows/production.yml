name: PHP Composer

on:
  push:
    branches: [ "production" ]

permissions: write-all

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        tools: composer:v2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction --no-scripts
      
    - name: Run test suite
      run: ./vendor/bin/pest tests
      
  build:

    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      deployments: write
  
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        
    - name: Install npm dependencies
      run: npm install --omit=dev
        
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        tools: composer:v2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction --no-scripts --no-dev --optimize-autoloader
        
    - name: Build CSS
      run: npx tailwindcss -i ./src/assets/index.css -o ./public/css/style.css --minify

    - name: Deploy to Cloudflare Pages
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: 'personal-website'
        directory: '.'
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  
